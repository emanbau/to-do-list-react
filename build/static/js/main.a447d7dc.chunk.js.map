{"version":3,"sources":["components/Todoform.js","components/Todo.js","components/Todolist.js","App.js","index.js"],"names":["Todoform","props","useState","input","setInput","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","isComplete","key","onClick","Todolist","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","document","getElementById"],"mappings":"qPAiCeA,MA7Bf,SAAkBC,GAAQ,IAAD,EAECC,mBAAS,IAFV,mBAElBC,EAFkB,KAEXC,EAFW,KAmBrB,OACI,6BACI,0BAAMC,UAAU,YAAYC,SAbnB,SAAAC,GACjBA,EAAEC,iBAEFP,EAAMK,SAAS,CACXG,GAAIC,KAAKC,MAAoB,IAAdD,KAAKE,UACpBC,KAAMV,IAGVC,EAAS,MAMG,2BAAOU,KAAK,OAAOC,YAAY,8BAA8BC,MAAOb,EAAOc,KAAK,OAAOZ,UAAU,aAAaa,SAjBzG,SAAAX,GAAC,OAAIH,EAASG,EAAEY,OAAOH,UAkB5B,4BAAQX,UAAU,eAAlB,U,cCUDe,MAhCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAAc,EACnCtB,mBAAS,CAC7BO,GAAI,KACJO,MAAO,KAHgD,mBACpDS,EADoD,KAC9CC,EAD8C,KAc3D,OAAID,EAAKhB,GACE,kBAAC,EAAD,CAAUgB,KAAMA,EAAMnB,SATZ,SAAAU,GACjBQ,EAAWC,EAAKhB,GAAIO,GACpBU,EAAQ,CACJjB,GAAI,KACJO,MAAO,QAQRK,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACb,yBAAKxB,UAAWuB,EAAKE,WAAa,oBAAsB,WACxDC,IAAKF,GACD,yBAAKE,IAAKH,EAAKnB,GAAIuB,QAAS,kBAAMV,EAAaM,EAAKnB,MAC/CmB,EAAKf,MAEV,yBAAKR,UAAU,SACX,kBAAC,IAAD,CAAmB2B,QAAS,kBAAMT,EAAWK,EAAKnB,KAAKJ,UAAU,gBACjE,kBAAC,IAAD,CAAQ2B,QAAS,kBAAMN,EAAQ,CAAEjB,GAAImB,EAAKnB,GAAIO,MAAOY,EAAKf,QAAQR,UAAU,oBCqB7E4B,MA/Cf,WAAqB,IAAD,EACU/B,mBAAS,IADnB,mBACTmB,EADS,KACFa,EADE,KAsChB,OACI,6BACI,0CACA,kBAAC,EAAD,CAAU5B,SAtCF,SAAAsB,GACZ,GAAIA,EAAKf,OAAQ,QAAQsB,KAAKP,EAAKf,MAAnC,CAIA,IAAMuB,EAAQ,CAAIR,GAAJ,mBAAaP,IAE3Ba,EAASE,OAgCL,kBAAC,EAAD,CAAMf,MAAOA,EAAOC,aAdP,SAAAb,GACjB,IAAI4B,EAAehB,EAAMM,KAAI,SAAAC,GAIzB,OAHIA,EAAKnB,KAAOA,IACZmB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXM,EAASG,IAO2Cd,WArBrC,SAAAd,GACf,IAAM6B,EAAY,YAAIjB,GAAOkB,QAAO,SAAAX,GAAI,OAAIA,EAAKnB,KAAOA,KAExDyB,EAASI,IAkBmEd,WA7B7D,SAACgB,EAAQC,GACpBA,EAAS5B,OAAQ,QAAQsB,KAAKM,EAAS5B,OAI3CqB,GAAS,SAAAQ,GAAI,OAAIA,EAAKf,KAAI,SAAAgB,GAAI,OAAKA,EAAKlC,KAAO+B,EAASC,EAAWE,aCX5DC,MARf,WACE,OACE,yBAAKvC,UAAU,YACb,kBAAC,EAAD,QCFNwC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.a447d7dc.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\n\r\nfunction Todoform(props) {\r\n\r\nconst [input, setInput] = useState('');\r\n\r\n\r\nconst handleChange = e => setInput(e.target.value);\r\n\r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n        id: Math.floor(Math.random()*1000),\r\n        text: input\r\n    })\r\n    \r\n    setInput('');\r\n};\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n                <input type=\"text\" placeholder=\"Add something to your list!\" value={input} name=\"text\" className=\"todo-input\" onChange={handleChange}/>\r\n                <button className=\"todo-button\">Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todoform\r\n","import React, { useState } from 'react'\r\nimport Todoform from './Todoform'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    })\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <Todoform edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} \r\n        key={index}>\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n            <div className=\"icons\">\r\n                <RiCloseCircleLine onClick={() => removeTodo(todo.id)} className='delete-icon'/>\r\n                <TiEdit onClick={() => setEdit({ id: todo.id, value: todo.text})} className='edit-icon' />\r\n            </div>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nimport Todoform from './Todoform'\r\nimport Todo from './Todo'\r\n\r\nfunction Todolist() {\r\n    const [todos, setTodos] = useState([])\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return\r\n        }\r\n\r\n        const newTodos = [todo, ...todos]\r\n\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)))\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr);\r\n    }\r\n\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>To Do List</h1>\r\n            <Todoform onSubmit={addTodo}/>\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todolist\r\n","import React from 'react';\nimport './App.css';\nimport Todolist from './components/Todolist';\n\nfunction App() {\n  return (\n    <div className=\"Todo-app\">\n      <Todolist />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}